// <auto-generated />
using System;
using CrudMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CrudMVC.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20241101211606_Add data test")]
    partial class Adddatatest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CrudMVC.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateTime = new DateTime(2024, 11, 1, 16, 16, 4, 411, DateTimeKind.Local).AddTicks(5374),
                            Email = "juan.perez@example.com",
                            Name = "Juan Pérez",
                            Phone = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            CreateTime = new DateTime(2024, 11, 1, 16, 16, 4, 411, DateTimeKind.Local).AddTicks(5392),
                            Email = "maria.lopez@example.com",
                            Name = "María López",
                            Phone = "987654321"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
