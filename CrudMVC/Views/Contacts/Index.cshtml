@model IEnumerable<CrudMVC.Models.Contact>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center my-4">
    Lista de contactos
</h1>
<div class="row mb-3">
    <div class="col text-end">
        <a asp-action="Create" asp-controller="Contacts" class="btn btn-outline-primary btn-lg">
            <i class="fas fa-plus"></i> Nuevo contacto
        </a>
    </div>
</div>

<div class="row">
    <div class="col">
        <div class="card border">
            <div class="card-header bg-dark text-white">
                <h3 class="mb-0">Lista de Usuarios</h3>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    @if (Model.Any())
                    {
                            <table class="table table-striped table-hover" id="tblUsuarios" width="100%">
                                <thead class="table-dark">
                                <tr>
                                    <th scope="col">@Html.DisplayNameFor(m => m.Id)</th>
                                    <th scope="col">@Html.DisplayNameFor(m => m.Name)</th>
                                    <th scope="col">@Html.DisplayNameFor(m => m.Email)</th>
                                    <th scope="col">@Html.DisplayNameFor(m => m.Phone)</th>
                                    <th scope="col">@Html.DisplayNameFor(m => m.CreateTime)</th>
                                    <th scope="col">Acciones</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var item in Model)
                                {
                                        <tr id="contact-@item.Id">
                                            <td>@Html.DisplayFor(m => item.Id)</td>
                                            <td>@Html.DisplayFor(m => item.Name)</td>
                                            <td>@Html.DisplayFor(m => item.Email)</td>
                                            <td>@Html.DisplayFor(m => item.Phone)</td>
                                            <td>@Html.DisplayFor(m => item.CreateTime)</td>
                                            <td>
                                                <a class="btn btn-warning btn-sm" asp-action="Edit" asp-route-id="@item.Id">Editar</a>
                                                <a class="btn btn-secondary btn-sm" asp-action="Detail" asp-route-id="@item.Id">Detalle</a>
                                                <button class="btn btn-danger btn-sm" onclick="deleteContact(@item.Id)">Eliminar</button>
                                            </td>
                                        </tr>
                                }
                                </tbody>
                            </table>
                    }
                    else
                    {
                            <p class="text-danger text-center">No hay registros</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
        <script>
            async function deleteContact(id) {
                if (confirm("¿Estás seguro de que deseas eliminar este contacto?")) {
                    try {
                        const response = await fetch(`/Contacts/Delete/${id}`, { method: 'DELETE' });
                        if (response.ok) {
                            document.getElementById(`contact-${id}`).remove();
                        } else {
                            alert("Ocurrió un error al eliminar el contacto.");
                        }
                    } catch (error) {
                        alert("Ocurrió un error al eliminar el contacto.");
                    }
                }
            }
        </script>
}